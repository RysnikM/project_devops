---
- name: Creates directory
  file: 
    path: '{{ project_path }}' 
    state: directory

- name: Clone git repo
  git:
    repo: '{{ git_url }}'
    dest: '{{ project_path }}'
    version: '{{ web_release }}'
    force: yes

- name: install library
  shell: "pip3 install -r {{ project_path }}/requiremens.txt"

- name: Make migrations
  shell: "python3 {{ project_path }}/manage.py makemigrations"

- name: Migrate database
  shell: "python3 {{ project_path }}/manage.py migrate"

- name: Get all static files    
  shell: "python3 {{ project_path }}/manage.py collectstatic"
  ignore_errors: yes

# - name: Check if django superuser exists
#   django_manage:
#     app_path: '{{ project_path }}'
#     command: shell -c 'import sys; from django.contrib.auth.models import User; sys.exit(0 if User.objects.filter(username="admin").count() > 0 else 1)'
#   register: checksuperuser
#   check_mode: True
#   ignore_errors: True
#   changed_when: False      

- name: django create superuser
  # django_manage:
    # app_path: '{{ project_path }}'
    # command: "createsuperuser --noinput --username=admin --email=rn@mvlab.by "
    # when: checksuperuser is succeeded
  shell: "python3 {{ project_path }}/manage.py createsuperuser --noinput --username=admin --email=rn@mvlab.by"
  ignore_errors: yes


- name: Create Gunicorn Socket file
  template: 
    src: gunicorn.socket.j2 
    dest: /etc/systemd/system/gunicorn.socket

- name: Create Gunicorn Service file
  template: 
    src: gunicorn.service.j2 
    dest: /etc/systemd/system/gunicorn.service 
